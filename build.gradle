import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'net.darkhax.curseforgegradle' version "1.1.16"
}



version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Parchment"
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		name = "Porting Lib"
		url = "https://mvn.devos.one/snapshots/"
		content {

		}
	}
	maven {
		name = "mixin-extras"
		url = "https://jitpack.io"
		content {
			includeGroupByRegex "com.github.*"
		}
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.06.26@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_lib_version}"))

	//Porting lib, idk how to opt out :(
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:accessors:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:attributes:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:base:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:client_events:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:common:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:core:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:entity:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:extensions:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:lazy_registration:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:loot:2.1.1102+1.20-entity-refactor")) //Using a more recent version... hopefully fine?
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:mixin_extensions:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:models:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:registries:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:tags:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:tool_actions:${project.port_lib_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:transfer:${project.port_lib_version}"))
//	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:utility:${project.port_lib_version}"))


	// Mixin Extras + Mixin^2 for mod compat
	implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0-beta.10"))
	implementation(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-fabric:0.0.2"))
}

loom {
	accessWidenerPath = file("src/main/resources/fakerlib.aw")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "fakerlib"
	versionType = "beta"
	versionName = "Fakerlib " + project.version
	uploadFile = remapJar
	gameVersions = ["1.20.1"]
	loaders = ["fabric"]
	changelog = "[Changelog](https://github.com/TheWinABagel/FakerLib/blob/master/changelog.md)"
	//debugMode = true
	dependencies {
		required.project "fabric-api"
	}
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = System.getenv("cf_token")
	//debugMode = true
	def mainFile = upload(853197, remapJar)
	mainFile.changelog = "https://github.com/TheWinABagel/FakerLib/blob/master/changelog.md"
	mainFile.releaseType = "beta"
	//mainFile.addJavaVersion("17") //doesn't work for reasons unknown to me
	mainFile.addGameVersion("1.20.1")
	mainFile.addModLoader("fabric")
	mainFile.displayName = project.archives_base_name + "-" + project.version
	mainFile.addRequirement("fabric-api") //FAPI
}
